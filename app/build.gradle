apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    flatDir {
        dirs 'libs'
    }
}


android {

    compileSdkVersion project.properties.projectCompileSdkVersion
    buildToolsVersion project.properties.projectBuildToolsVersion

    testOptions {
        unitTests.returnDefaultValues = true
    }
    defaultConfig {
        applicationId "com.yennkasa"
        minSdkVersion project.properties.projectMinSdkVersion
        targetSdkVersion project.properties.projectTargetSdkVersion
        multiDexEnabled true
        versionCode project.properties.projectVersionCode
        versionName project.properties.projectVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
//
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            jniLibs.srcDirs = ['libs']
        }
    }
    android {
        packagingOptions {
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
        }
        dexOptions {
            jumboMode = true
            javaMaxHeapSize "4g"
//            additionalParameters += '--minimal-main-dex'
//            additionalParameters += '--set-max-idx-number=55000'
            // additionalParameters += '--main-dex-list=$projectDir/<filename>'.toString()
            // additionalParameters += '--set-max-idx-number=55000'
        }
    }
    splits {
        abi {
            enable project.properties.projectSplitEnabled
            reset()
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a' //select ABIs to build APKs for
            universalApk true
            //generatePublicPrivateKeyPair an additional APK that contains all the ABIs
        }
    }
}

dependencies {
    testCompile 'org.json:json:20090211'
    testCompile fileTree(include: ['*.jar'], dir: 'testLibs')
    compile project(':lib')
    compile project(':daos')
    compile project(':utils')
    compile project(':cropper')
    compile project(':pairapp-call')
    compile project(':websocket-client')
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }

    compile('vc908.stickers:stickerfactory:0.13.6@aar') {
        transitive = true;
    }
    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:3.0"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile 'org.robolectric:shadows-support-v4:3.0'
    testCompile "org.powermock:powermock-module-junit4:1.6.2"
    testCompile "org.powermock:powermock-module-junit4-rule:1.6.2"
    testCompile "org.powermock:powermock-api-mockito:1.6.2"
    testCompile "org.powermock:powermock-classloading-xstream:1.6.2"
    compile 'io.realm:android-adapters:1.4.0'
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:design:25.1.0'
    compile 'com.android.support:cardview-v7:25.1.0'
    compile 'com.android.support:recyclerview-v7:25.1.0'
    compile 'com.android.support:gridlayout-v7:25.1.0'
    compile 'com.android.support:support-v4:25.1.0'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.commit451:PhotoView:1.2.4'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.rxbinding:rxbinding:1.0.0'
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'
    compile 'com.google.firebase:firebase-messaging:9.4.0'
    compile 'com.android.support:multidex:1.0.1'

    compile(name: 'sinch-android-verification-1.4.0', ext: 'aar')
//    compile 'me.zhanghai.android.patternlock:library:2.0.4'
}

// map for the version code
project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 5, 'mips64': 6, 'x86': 8, 'x86_64': 9]

android.applicationVariants.all { variant ->
    // assign different version code for each output
    variant.outputs.each { output ->
        output.versionCodeOverride =
                project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 1000000 + android.defaultConfig.versionCode
    }
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}
apply plugin: 'com.google.gms.google-services'


